#################################################
#  07.12.2023 9.00AM
#################################################
#  TOPICS TO BE COVERED 
# ğŸ‘‰ Accessing List in Pyhton
#################################################

# accessing elements/objetc/items inside a list



# Accessing a list
#                   0       1       2      3        4
#                  -5       -4      -3     -2      -1
students_name = ['Amar','Akash','Anuj','Amit','Anik']

print(students_name[0])
print(students_name[2])
print(students_name[4])
print(students_name[1])


# Slicing a list

print(students_name[0:2]) #n-1 value will be used
print(students_name[0:3]) #n-1 value will be used
print(students_name[:3]) # default start will be considered
print(students_name[2:]) # default last will be considered
print(students_name[:]) # complete list will be printed




# with step value
# print(students_name[strt:stop:step])

print(students_name[0:5:1])#complete list will be printed
print(students_name[0:5:2])#one obkect will get skipped
print(students_name[0:5:3])#one obkect will get skipped
print("******MIssing values*************")
print(students_name[:5:3])#start: default is zero
print(students_name[0::1])#end : default is end
print(students_name[0:5:])#skip : default is 1




#                   0       1       2      3        4
#                  -5       -4      -3     -2      -1
students_name = ['Amar','Akash','Anuj','Amit','Anik']

#  use of neg indexing 

print(students_name[-5])#Amar
print(students_name[-3])#Anuj
# print(students_name[-10])#index out of range

# List reversal
print(students_name[::-1])#skip : neg indexing



#  accessing a nested list
#             0   1   2   3 4 [0   1   2    3   4]
list_alpa = ['b','c','d','f',['a','e','i','o','u']]

print(list_alpa[0])
print(list_alpa[3])
print(list_alpa[4])
print(list_alpa[4][0])
print(list_alpa[4][3])




list_alpa = ['b','c','d','f',['a','e','i','o','u',[11,22]]]


print(list_alpa[4][5][0])
